networks:
  # We define a network for Traefik and all the services it will manage
  traefik_network:
    name: traefik_network

services:
  traefik:
    image: traefik:${TRAEFIK_IMAGE_VERSION:-latest}
    command:
      - --api.dashboard=${TRAEFIK_ENABLE_DASHBOARD:-false}
      ## Docker
      # Use Docker as a provider
      - --providers.docker=true
      # Do not expose containers by default
      - --providers.docker.exposedbydefault=false
      ## Entrypoints
      # Define an entrypoint for HTTP on port 80
      - --entrypoints.http.address=:80
      # Define an entrypoint for HTTPS on port 443
      - --entrypoints.https.address=:443
      # We redirect all HTTP traffic to HTTPS
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --entrypoints.http.http.redirections.entrypoint.permanent=true
      # We enable TLS for all HTTPS traffic
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http.tls.certresolver=letsencrypt
      ## Certificates
      # We add Let's Encrypt as a default certificate resolver
      # Uncomment next line when testing
      - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    restart: unless-stopped
    networks:
      # Attach the Traefik container to the traefik network
      - traefik_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    labels:
      ## Traefik
      # Enable Traefik for this container
      - traefik.enable=true
      # Help Traefik find this container on the network
      - traefik.docker.network=traefik_network
      ## Routers
      # The entrypoint of this container is HTTPS
      - traefik.http.routers.traefik.entrypoints=https
      # This container is accessible with the fully qualified domain name
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_FULLY_QUALIFIED_DOMAIN_NAME}`)
      # This is needed to access the Traefik dashboard
      - traefik.http.routers.traefik.service=api@internal
  buddycount-api:
    image: ghcr.io/buddycount/buddycount-api:latest
    labels:
      ## Traefik
      - traefik.enable=true
      - traefik.docker.network=traefik_network
      ## Routers
      - traefik.http.routers.buddycount-api.entrypoints=https
      - traefik.http.routers.buddycount-api.rule=Host(`${BUDDYCOUNT_API_FULLY_QUALIFIED_DOMAIN_NAME}`)
    networks:
      - traefik_network
    expose:
      - 3000
    